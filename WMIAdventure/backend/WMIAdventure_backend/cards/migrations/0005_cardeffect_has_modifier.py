# Generated by Django 3.2 on 2021-05-24 17:47

from django.db import migrations, models
from cards.models import CardLevel as ModelCardLevel
from cards.models import CardEffect as ModelCardEffect


def insert_card_effects_values_to_db(apps, schema_editor):
    CardEffect = apps.get_model('cards', 'CardEffect')
    CardEffect.objects.all().delete()
    for e in ModelCardEffect.EffectId:
        item = CardEffect.objects.create(id=e.value,
                                         name=e.label)
        item.save()

    # Modifying has_modifier values for some effects
    # One may also use views to modify them, we just set them here initially.
    def change_modifier_true(effect: ModelCardEffect.EffectId):
        effect = CardEffect.objects.get(pk=effect.value)
        effect.has_modifier = True
        effect.save()

    change_modifier_true(ModelCardEffect.EffectId.DMG)
    change_modifier_true(ModelCardEffect.EffectId.SHIELD)
    change_modifier_true(ModelCardEffect.EffectId.HEAL)


def insert_card_levels_values_to_db(apps, schema_editor):
    """
    Inserts all possible CardLevel records to database.
    """
    CardLevel = apps.get_model('cards', 'CardLevel')
    Level = ModelCardLevel.Level

    CardLevel.objects.all().delete()
    for value in Level.values:
        cLvl = CardLevel.objects.create(level=value)
        cLvl.save()


class Migration(migrations.Migration):

    dependencies = [
        ('cards', '0004_auto_20210507_1008'),
    ]

    operations = [
        migrations.AddField(
            model_name='cardeffect',
            name='has_modifier',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(insert_card_levels_values_to_db),
        migrations.RunPython(insert_card_effects_values_to_db)
    ]
